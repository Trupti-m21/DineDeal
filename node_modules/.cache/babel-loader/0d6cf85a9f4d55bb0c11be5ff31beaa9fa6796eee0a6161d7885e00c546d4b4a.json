{"ast":null,"code":"// Constants for Google and Facebook OAuth\nconsole.log(\"login.js is loaded and executed\");\nconst GOOGLE_CLIENT_ID = \"947375457765-3us6cvnqlg56dmi01bv64lqh0i47neur.apps.googleusercontent.com\";\nconst FACEBOOK_APP_ID = \"542492095402931\";\n\n// Extract token from URL fragment\nfunction getAccessTokenFromUrl() {\n  console.log(\"Extracting access token from URL...\");\n  const hash = window.location.hash.substring(1); // Extract fragment part of the URL\n  const params = new URLSearchParams(hash);\n  const token = params.get(\"access_token\");\n  if (token) {\n    console.log(\"Access token found:\", token);\n    window.history.replaceState(null, \"\", window.location.pathname + window.location.search);\n  } else {\n    console.log(\"No access token found in the URL.\");\n  }\n  return token;\n}\n\n// Fetch user info from the platform and update the UI\nfunction fetchUser(platform, token) {\n  console.log(`Fetching user info for platform: ${platform}`);\n  const userInfoUrl = platform === \"google\" ? `https://www.googleapis.com/oauth2/v2/userinfo?access_token=${token}` : `https://graph.facebook.com/me?access_token=${token}&fields=name`;\n  fetch(userInfoUrl).then(response => response.json()).then(data => {\n    console.log(\"User data fetched:\", data);\n    const username = data.name || \"User\";\n    localStorage.setItem(\"username\", username);\n    console.log(\"Username stored in localStorage:\", username);\n    window.location.href = \"index.html\";\n  }).catch(error => console.error(\"Error fetching user info:\", error));\n}\n\n// Store token securely in localStorage\nfunction storeToken(token, platform) {\n  console.log(`Storing token for platform: ${platform}`);\n  const expiryTime = Date.now() + 3600 * 1000; // Token validity (1 hour)\n  localStorage.setItem(`${platform}_access_token`, JSON.stringify({\n    token,\n    expiryTime\n  }));\n  console.log(\"Token stored:\", token);\n}\n\n// Validate token stored in localStorage\nfunction validateToken(platform) {\n  console.log(`Validating token for platform: ${platform}`);\n  const tokenData = JSON.parse(localStorage.getItem(`${platform}_access_token`));\n  if (!tokenData || Date.now() > tokenData.expiryTime) {\n    console.warn(\"Token expired or invalid for platform:\", platform);\n    localStorage.removeItem(`${platform}_access_token`);\n    return null;\n  }\n  console.log(\"Token is valid for platform:\", platform);\n  return tokenData.token;\n}\n\n// Display username on the main page (index.html)\nfunction displayUserOnHomePage() {\n  console.log(\"Displaying user on the homepage...\");\n  const username = localStorage.getItem(\"username\");\n  const userGreeting = document.getElementById(\"userGreeting\");\n  const loginButtonSection = document.getElementById(\"loginButtonSection\");\n  const usernameElement = document.getElementById(\"username\");\n  if (username) {\n    console.log(\"User is logged in:\", username);\n    usernameElement.textContent = `Welcome, ${username}`;\n    userGreeting.classList.remove(\"d-none\");\n    loginButtonSection.classList.add(\"d-none\");\n    console.log(localStorage.getItem(\"username\"));\n    console.log(localStorage.getItem(\"google_access_token\"));\n    console.log(localStorage.getItem(\"facebook_access_token\"));\n  } else {\n    console.log(\"No user is logged in.\");\n    userGreeting.classList.add(\"d-none\");\n    loginButtonSection.classList.remove(\"d-none\");\n  }\n}\n\n// Logout functionality\nfunction setupLogout() {\n  console.log(\"Setting up logout functionality...\");\n  const logoutButton = document.getElementById(\"logoutButton\");\n  if (logoutButton) {\n    logoutButton.addEventListener(\"click\", () => {\n      console.log(\"Logging out...\");\n      localStorage.removeItem(\"username\");\n      localStorage.removeItem(\"google_access_token\");\n      localStorage.removeItem(\"facebook_access_token\");\n      window.location.href = \"index.html\";\n    });\n  }\n}\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"Document loaded.\");\n  if (window.location.pathname.includes(\"index.html\")) {\n    console.log(\"Handling homepage behavior...\");\n    const googleToken = validateToken(\"google\");\n    const facebookToken = validateToken(\"facebook\");\n    if (googleToken || facebookToken) {\n      displayUserOnHomePage();\n    } else {\n      console.log(\"No valid token found.\");\n    }\n    setupLogout();\n\n    // Handle location fetching\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const locationElement = document.getElementById(\"currentLocation\");\n        if (locationElement) {\n          locationElement.textContent = `Lat: ${latitude}, Long: ${longitude}`;\n        }\n      }, error => {\n        console.error(\"Error fetching location:\", error);\n        const locationElement = document.getElementById(\"currentLocation\");\n        if (locationElement) {\n          locationElement.textContent = \"Unable to fetch location.\";\n        }\n      });\n    } else {\n      const locationElement = document.getElementById(\"currentLocation\");\n      if (locationElement) {\n        locationElement.textContent = \"Geolocation not supported.\";\n      }\n    }\n\n    // Attach listener to login button\n    const openLoginButton = document.getElementById(\"openLoginButton\");\n    if (openLoginButton) {\n      openLoginButton.addEventListener(\"click\", () => {\n        console.log(\"Redirecting to login page...\");\n        window.location.href = \"login.html\"; // Navigate to login page\n      });\n    } else {\n      console.warn(\"Login button not found.\");\n    }\n  }\n});","map":{"version":3,"names":["console","log","GOOGLE_CLIENT_ID","FACEBOOK_APP_ID","getAccessTokenFromUrl","hash","window","location","substring","params","URLSearchParams","token","get","history","replaceState","pathname","search","fetchUser","platform","userInfoUrl","fetch","then","response","json","data","username","name","localStorage","setItem","href","catch","error","storeToken","expiryTime","Date","now","JSON","stringify","validateToken","tokenData","parse","getItem","warn","removeItem","displayUserOnHomePage","userGreeting","document","getElementById","loginButtonSection","usernameElement","textContent","classList","remove","add","setupLogout","logoutButton","addEventListener","includes","googleToken","facebookToken","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","locationElement","openLoginButton"],"sources":["C:/Users/trupt/DineDeals/src/login.js"],"sourcesContent":["// Constants for Google and Facebook OAuth\r\nconsole.log(\"login.js is loaded and executed\");\r\nconst GOOGLE_CLIENT_ID = \"947375457765-3us6cvnqlg56dmi01bv64lqh0i47neur.apps.googleusercontent.com\";\r\nconst FACEBOOK_APP_ID = \"542492095402931\";\r\n\r\n// Extract token from URL fragment\r\nfunction getAccessTokenFromUrl() {\r\n    console.log(\"Extracting access token from URL...\");\r\n    const hash = window.location.hash.substring(1); // Extract fragment part of the URL\r\n    const params = new URLSearchParams(hash);\r\n    const token = params.get(\"access_token\");\r\n\r\n    if (token) {\r\n        console.log(\"Access token found:\", token);\r\n        window.history.replaceState(null, \"\", window.location.pathname + window.location.search);\r\n    } else {\r\n        console.log(\"No access token found in the URL.\");\r\n    }\r\n    return token;\r\n}\r\n\r\n// Fetch user info from the platform and update the UI\r\nfunction fetchUser(platform, token) {\r\n    console.log(`Fetching user info for platform: ${platform}`);\r\n    const userInfoUrl =\r\n        platform === \"google\"\r\n            ? `https://www.googleapis.com/oauth2/v2/userinfo?access_token=${token}`\r\n            : `https://graph.facebook.com/me?access_token=${token}&fields=name`;\r\n\r\n    fetch(userInfoUrl)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(\"User data fetched:\", data);\r\n            const username = data.name || \"User\";\r\n            localStorage.setItem(\"username\", username);\r\n            console.log(\"Username stored in localStorage:\", username);\r\n\r\n            window.location.href = \"index.html\";\r\n        })\r\n        .catch((error) => console.error(\"Error fetching user info:\", error));\r\n}\r\n\r\n// Store token securely in localStorage\r\nfunction storeToken(token, platform) {\r\n    console.log(`Storing token for platform: ${platform}`);\r\n    const expiryTime = Date.now() + 3600 * 1000; // Token validity (1 hour)\r\n    localStorage.setItem(`${platform}_access_token`, JSON.stringify({ token, expiryTime }));\r\n    console.log(\"Token stored:\", token);\r\n}\r\n\r\n\r\n// Validate token stored in localStorage\r\nfunction validateToken(platform) {\r\n    console.log(`Validating token for platform: ${platform}`);\r\n    const tokenData = JSON.parse(localStorage.getItem(`${platform}_access_token`));\r\n    if (!tokenData || Date.now() > tokenData.expiryTime) {\r\n        console.warn(\"Token expired or invalid for platform:\", platform);\r\n        localStorage.removeItem(`${platform}_access_token`);\r\n        return null;\r\n    }\r\n    console.log(\"Token is valid for platform:\", platform);\r\n    return tokenData.token;\r\n}\r\n\r\n\r\n\r\n// Display username on the main page (index.html)\r\nfunction displayUserOnHomePage() {\r\n    console.log(\"Displaying user on the homepage...\");\r\n    const username = localStorage.getItem(\"username\");\r\n    const userGreeting = document.getElementById(\"userGreeting\");\r\n    const loginButtonSection = document.getElementById(\"loginButtonSection\");\r\n    const usernameElement = document.getElementById(\"username\");\r\n\r\n    if (username) {\r\n        console.log(\"User is logged in:\", username);\r\n        usernameElement.textContent = `Welcome, ${username}`;\r\n        userGreeting.classList.remove(\"d-none\");\r\n        loginButtonSection.classList.add(\"d-none\");\r\n        console.log(localStorage.getItem(\"username\"));\r\n        console.log(localStorage.getItem(\"google_access_token\"));\r\n        console.log(localStorage.getItem(\"facebook_access_token\"));\r\n\r\n    } else {\r\n        console.log(\"No user is logged in.\");\r\n        userGreeting.classList.add(\"d-none\");\r\n        loginButtonSection.classList.remove(\"d-none\");\r\n    }\r\n}\r\n\r\n// Logout functionality\r\nfunction setupLogout() {\r\n    console.log(\"Setting up logout functionality...\");\r\n    const logoutButton = document.getElementById(\"logoutButton\");\r\n    if (logoutButton) {\r\n        logoutButton.addEventListener(\"click\", () => {\r\n            console.log(\"Logging out...\");\r\n            localStorage.removeItem(\"username\");\r\n            localStorage.removeItem(\"google_access_token\");\r\n            localStorage.removeItem(\"facebook_access_token\");\r\n            window.location.href = \"index.html\";\r\n        });\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    console.log(\"Document loaded.\");\r\n  \r\n    if (window.location.pathname.includes(\"index.html\")) {\r\n      console.log(\"Handling homepage behavior...\");\r\n  \r\n      const googleToken = validateToken(\"google\");\r\n      const facebookToken = validateToken(\"facebook\");\r\n  \r\n      if (googleToken || facebookToken) {\r\n        displayUserOnHomePage();\r\n      } else {\r\n        console.log(\"No valid token found.\");\r\n      }\r\n  \r\n      setupLogout();\r\n  \r\n      // Handle location fetching\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            const locationElement = document.getElementById(\"currentLocation\");\r\n            if (locationElement) {\r\n              locationElement.textContent = `Lat: ${latitude}, Long: ${longitude}`;\r\n            }\r\n          },\r\n          (error) => {\r\n            console.error(\"Error fetching location:\", error);\r\n            const locationElement = document.getElementById(\"currentLocation\");\r\n            if (locationElement) {\r\n              locationElement.textContent = \"Unable to fetch location.\";\r\n            }\r\n          }\r\n        );\r\n      } else {\r\n        const locationElement = document.getElementById(\"currentLocation\");\r\n        if (locationElement) {\r\n          locationElement.textContent = \"Geolocation not supported.\";\r\n        }\r\n      }\r\n  \r\n      // Attach listener to login button\r\n      const openLoginButton = document.getElementById(\"openLoginButton\");\r\n      if (openLoginButton) {\r\n        openLoginButton.addEventListener(\"click\", () => {\r\n          console.log(\"Redirecting to login page...\");\r\n          window.location.href = \"login.html\"; // Navigate to login page\r\n        });\r\n      } else {\r\n        console.warn(\"Login button not found.\");\r\n      }\r\n    }\r\n  });\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}